//###########################################################################
// Description:
//
// Task 1: Implements a 5 tap FIR filter
//
//###########################################################################
// $TI Release:  $
// $Release Date:  $
//###########################################################################

#include "DSP28x_Project.h"
// Include the test header file whose name is based on the test name
// which is defined by the macro TEST on the command line
#include XSTRINGIZE(XCONCAT(TEST_NAME,_shared.h))

//Task 1 : {FILTER_LEN} tap lowpass FIR filter
__interrupt void Cla1Task1 ( void )
{
    //Local Variables
    int i;
    float fTemp = 0;
            
    __mdebugstop();
   
    fTemp = 0;
    
    //Shift the delay line to the right by 1
    #pragma UNROLL(5)
    for(i=FILTER_LEN-1;i>0;i--){
      fDelayLine[i] = fDelayLine[i-1];
      //Multiply coefficients with the delay line and accumulate
      fTemp += fCoeffs[i]*fDelayLine[i];
    }
    
    //Get adc input into start of the delay line
    //note the adc input is simulated in software
    fDelayLine[0] = (float)xAdcInput; //convert to single precision float
    fTemp += fCoeffs[0]*fDelayLine[0];
    xResult = (int)fTemp;
}

__interrupt void Cla1Task2 ( void )
{
	
}
__interrupt void Cla1Task3 ( void )
{
	
}
__interrupt void Cla1Task4 ( void )
{
	
}
__interrupt void Cla1Task5 ( void )
{
	
}
__interrupt void Cla1Task6 ( void )
{
	
}
__interrupt void Cla1Task7 ( void )
{
	
}
__interrupt void Cla1Task8 ( void )
{
	
}

