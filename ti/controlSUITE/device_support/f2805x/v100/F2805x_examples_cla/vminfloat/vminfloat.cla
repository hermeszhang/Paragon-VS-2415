//###########################################################################
// Description:
//
// Task 1: calculates the vector min moving backward through the array
// Task 2: calculates the vector min moving forward through the array
// Task 3: calculates the vector min using the ternary operator
//
//###########################################################################
// $TI Release:  $
// $Release Date:  $
//###########################################################################

#include "DSP28x_Project.h"
// Include the test header file whose name is based on the test name
// which is defined by the macro TEST on the command line
#include XSTRINGIZE(XCONCAT(TEST_NAME,_shared.h))

//Task 1 : Vector min 
__interrupt void Cla1Task1 ( void )
{
    min1 = vector1[4];
    index1 = 4;

    for(i = 3; i >= 0; i--)
    {
        if(vector1[i] < min1) 
        {
           index1 = i;
           min1 = vector1[i];
        }
    }
}
//Task 2 : Vector min 
__interrupt void Cla1Task2 ( void )
{
    min2 = vector2[0];
    index2 = 0;

    for(i = 1; i < length2; i++)
    {
        if(vector2[i] < min2) 
        {
           index2 = i;
           min2 = vector2[i];
        }
    }	
}
//Task 3 : Vector min 
__interrupt void Cla1Task3 ( void )
{
	index3 = 0;
	min3 = vector3[0];

    for(i = 1; i < length3; i++)
    {
        index3 = (vector3[i] < min3) ? i : index3;
        min3   = (vector3[i] < min3) ? vector3[i] : min3;
    }
}

__interrupt void Cla1Task4 ( void )
{
	
}
__interrupt void Cla1Task5 ( void )
{
	
}
__interrupt void Cla1Task6 ( void )
{
	
}
__interrupt void Cla1Task7 ( void )
{
	
}
__interrupt void Cla1Task8 ( void )
{
	
}

