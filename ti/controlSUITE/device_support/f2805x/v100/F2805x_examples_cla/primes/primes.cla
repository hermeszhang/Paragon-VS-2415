//###########################################################################
// Description:
//
// Task 1: Generate the sequence of prime numbers
//
//###########################################################################
// $TI Release:  $
// $Release Date:  $
//###########################################################################

#include "DSP28x_Project.h"
// Include the test header file whose name is based on the test name
// which is defined by the macro TEST on the command line
#include XSTRINGIZE(XCONCAT(TEST_NAME,_shared.h))

int32 chkdiv(int32, int32);

__interrupt void Cla1Task1 ( void )
{
 
   __mdebugstop();
   int32 i, j, index;
   index = 0;
   
//
// Obviously 1 and 2 are prime, but for this test
// let the program determine that
//
   for ( i = 1; i <= 2; i++ )
   {
      for ( j = 2; j <= i/2; j++ )
      {
         if (chkdiv(i,j) == 0 ) break;
      }
      if ( j > i / 2 ) 
      {
      	out[index] = i;
      	index++;
      }
   }
//
// For the rest of the numbers, skip evens
//       
   for ( i = 3; index < LENGTH; i+=2 )
   {
      for ( j = 2; j <= i/2; j++ )
      {
         if (chkdiv(i,j) == 0 ) break;
      }
      if ( j > i / 2 ) 
      {
      	out[index] = i;
      	index++;
      }
   }
}

int32 chkdiv(int32 x, int32 y)
{
    x = abs(x);
    y = abs(y);
    do
    {
        x -= y;        
    }
    while (x > 0);
    return x;     
}

__interrupt void Cla1Task2 ( void )
{
	
}
__interrupt void Cla1Task3 ( void )
{
	
}
__interrupt void Cla1Task4 ( void )
{
	
}
__interrupt void Cla1Task5 ( void )
{
	
}
__interrupt void Cla1Task6 ( void )
{
	
}
__interrupt void Cla1Task7 ( void )
{
	
}
__interrupt void Cla1Task8 ( void )
{
	
	
}

